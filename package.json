{
  "name": "@puchi-be/source",
  "version": "0.0.1",
  "license": "UNLICENSED",
  "author": {
    "name": "HoanIT",
    "email": "lehoan.dev@gmail.com"
  },
  "description": "Modern microservices backend for language learning application",
  "keywords": [
    "microservices",
    "nestjs",
    "kafka",
    "typescript",
    "language-learning"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/hoan02/puchi-be.git"
  },
  "homepage": "https://github.com/hoan02/puchi-be#readme",
  "bugs": {
    "url": "https://github.com/hoan02/puchi-be/issues"
  },
  "scripts": {
    "dev": "nx run-many --target=serve --projects=api-gateway,user-service,lesson-service,progress-service,media-service,notification-service,vocabulary-service,quiz-service,analytics-service --parallel",
    "dev:gateway": "nx serve api-gateway",
    "dev:user": "nx serve user-service",
    "dev:lesson": "nx serve lesson-service",
    "dev:progress": "nx serve progress-service",
    "dev:media": "nx serve media-service",
    "dev:notification": "nx serve notification-service",
    "dev:vocabulary": "nx serve vocabulary-service",
    "dev:quiz": "nx serve quiz-service",
    "dev:analytics": "nx serve analytics-service",
    "db:setup:user": "cd apps/user-service && npx prisma generate && npx prisma db push",
    "db:setup:lesson": "cd apps/lesson-service && npx prisma generate && npx prisma db push",
    "db:setup:progress": "cd apps/progress-service && npx prisma generate && npx prisma db push",
    "db:setup:media": "cd apps/media-service && npx prisma generate && npx prisma db push",
    "db:setup:notification": "cd apps/notification-service && npx prisma generate && npx prisma db push",
    "db:setup:analytics": "cd apps/analytics-service && npx prisma generate && npx prisma db push",
    "db:setup:vocabulary": "cd apps/vocabulary-service && npx prisma generate && npx prisma db push",
    "db:setup:quiz": "cd apps/quiz-service && npx prisma generate && npx prisma db push",
    "db:setup:all": "npm run db:setup:user && npm run db:setup:lesson && npm run db:setup:progress && npm run db:setup:media && npm run db:setup:notification && npm run db:setup:analytics && npm run db:setup:vocabulary && npm run db:setup:quiz",
    "k8s:infra:up": "kubectl apply -f k8s/networking/namespace.yaml && kubectl apply -f k8s/infra/storage.yaml && kubectl apply -f k8s/infra/ && kubectl apply -f k8s/config/",
    "k8s:infra:down": "kubectl delete -f k8s/infra/ && kubectl delete -f k8s/infra/storage.yaml && kubectl delete -f k8s/networking/namespace.yaml && kubectl delete -f k8s/config/",
    "k8s:services:up": "kubectl apply -f k8s/app/",
    "k8s:services:down": "kubectl delete -f k8s/app/",
    "k8s:secrets:up": "kubectl apply -f k8s/app/secrets.yaml",
    "k8s:tunnel:up": "kubectl apply -f k8s/app/secrets.yaml && kubectl apply -f k8s/middleware/cloudflared.yaml",
    "k8s:tunnel:down": "kubectl delete -f k8s/middleware/cloudflared.yaml && kubectl delete -f k8s/app/secrets.yaml",
    "k8s:ingress:up": "kubectl apply -f k8s/networking/ingress.yaml",
    "k8s:ingress:down": "kubectl delete -f k8s/networking/ingress.yaml",
    "k8s:middleware:up": "kubectl apply -f k8s/middleware/",
    "k8s:middleware:down": "kubectl delete -f k8s/middleware/",
    "k8s:ui:up": "kubectl apply -f k8s/ui/",
    "k8s:ui:down": "kubectl delete -f k8s/ui/",
    "k8s:infra:status": "kubectl get pods -A && kubectl get svc -A",
    "k8s:infra:logs:kafka": "kubectl logs -f deployment/kafka -n puchi-dev",
    "k8s:infra:logs:postgres": "kubectl logs -f deployment/postgres -n puchi-dev",
    "k8s:infra:logs:mongodb": "kubectl logs -f deployment/mongodb -n puchi-dev",
    "k8s:infra:logs:zookeeper": "kubectl logs -f deployment/zookeeper -n puchi-dev",
    "k8s:infra:logs:kafka-ui": "kubectl logs -f deployment/kafka-ui -n puchi-dev",
    "k8s:tunnel:logs": "kubectl logs -f deployment/cloudflared-tunnel -n puchi-dev",
    "clean": "nx reset",
    "format": "prettier --write \"**/*.{ts,js,json,md}\"",
    "format:check": "prettier --check \"**/*.{ts,js,json,md}\"",
    "graph": "nx graph",
    "docker:build:api-gateway": "docker build -f apps/api-gateway/Dockerfile -t hoanit/api-gateway:latest .",
    "docker:push:api-gateway": "docker push hoanit/api-gateway:latest",
    "docker:build:user-service": "docker build -f apps/user-service/Dockerfile -t hoanit/user-service:latest .",
    "docker:push:user-service": "docker push hoanit/user-service:latest",
    "docker:build:lesson-service": "docker build -f apps/lesson-service/Dockerfile -t hoanit/lesson-service:latest .",
    "docker:push:lesson-service": "docker push hoanit/lesson-service:latest",
    "docker:build:progress-service": "docker build -f apps/progress-service/Dockerfile -t hoanit/progress-service:latest .",
    "docker:push:progress-service": "docker push hoanit/progress-service:latest",
    "docker:build:media-service": "docker build -f apps/media-service/Dockerfile -t hoanit/media-service:latest .",
    "docker:push:media-service": "docker push hoanit/media-service:latest",
    "docker:build:notification-service": "docker build -f apps/notification-service/Dockerfile -t hoanit/notification-service:latest .",
    "docker:push:notification-service": "docker push hoanit/notification-service:latest",
    "docker:build:vocabulary-service": "docker build -f apps/vocabulary-service/Dockerfile -t hoanit/vocabulary-service:latest .",
    "docker:push:vocabulary-service": "docker push hoanit/vocabulary-service:latest",
    "docker:build:quiz-service": "docker build -f apps/quiz-service/Dockerfile -t hoanit/quiz-service:latest .",
    "docker:push:quiz-service": "docker push hoanit/quiz-service:latest",
    "docker:build:analytics-service": "docker build -f apps/analytics-service/Dockerfile -t hoanit/analytics-service:latest .",
    "docker:push:analytics-service": "docker push hoanit/analytics-service:latest",
    "docker:build:all": "npm run docker:build:api-gateway && npm run docker:build:user-service && npm run docker:build:lesson-service && npm run docker:build:progress-service && npm run docker:build:media-service && npm run docker:build:notification-service && npm run docker:build:vocabulary-service && npm run docker:build:quiz-service && npm run docker:build:analytics-service",
    "docker:push:all": "npm run docker:push:api-gateway && npm run docker:push:user-service && npm run docker:push:lesson-service && npm run docker:push:progress-service && npm run docker:push:media-service && npm run docker:push:notification-service && npm run docker:push:vocabulary-service && npm run docker:push:quiz-service && npm run docker:push:analytics-service"
  },
  "private": true,
  "dependencies": {
    "@grpc/grpc-js": "^1.13.4",
    "@grpc/proto-loader": "^0.7.15",
    "@nestjs/axios": "^4.0.0",
    "@nestjs/common": "^11.1.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.1.1",
    "@nestjs/event-emitter": "^3.0.1",
    "@nestjs/microservices": "^11.1.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.1",
    "@nestjs/swagger": "^11.2.0",
    "@prisma/client": "^6.8.2",
    "axios": "^1.9.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "kafkajs": "^2.2.4",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.2",
    "swagger-ui-express": "^5.0.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.26.0",
    "@nestjs/schematics": "^11.0.5",
    "@nestjs/testing": "^11.1.1",
    "@nx/eslint": "21.0.3",
    "@nx/eslint-plugin": "21.0.3",
    "@nx/jest": "21.0.3",
    "@nx/js": "21.0.3",
    "@nx/nest": "21.0.3",
    "@nx/node": "21.0.3",
    "@nx/web": "21.0.3",
    "@nx/webpack": "21.0.3",
    "@nx/workspace": "21.0.3",
    "@swc-node/register": "~1.10.10",
    "@swc/core": "~1.11.24",
    "@swc/helpers": "~0.5.17",
    "@types/jest": "^29.5.14",
    "@types/node": "~22.15.18",
    "eslint": "^9.26.0",
    "eslint-config-prettier": "^10.1.5",
    "jest": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jsonc-eslint-parser": "^2.1.0",
    "nx": "21.0.3",
    "prettier": "^3.5.3",
    "prisma": "^6.8.2",
    "ts-jest": "^29.3.2",
    "ts-node": "10.9.2",
    "tslib": "^2.8.1",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.32.1",
    "webpack-cli": "^6.0.1"
  }
}
